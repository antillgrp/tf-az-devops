# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

stages:
- stage: Plan
  jobs:
  - job: terraform_plan
    displayName: "[PLAN] ${{ variables['Build.DefinitionName'] }}"
    pool: 'Default'
    steps:
    - bash: |
        echo "##[section]Starting: Terraform Init"
        terraform init -upgrade
        echo "##[section]Starting: Terraform Plan"
        mkdir -p ./terraform
        terraform plan -out='./terraform/plan.tfplan' -input=false
        #terraform show ./terraform/plan.tfplan
      displayName: 'Run Terraform Init and Plan'

- stage: Apply
  jobs:
  - deployment: terraform_apply
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
    displayName: "[APPLY] ${{ variables['Build.DefinitionName'] }}"
    pool: 'Default'
    environment:
      name: 'dev'
    strategy:
        runOnce:
          deploy:
            steps:
            - checkout: self
            - bash: |
                echo "##[section]Starting: Terraform Init"
                terraform init -upgrade
                echo "##[section]Starting: Terraform Plan"
                mkdir -p ./terraform
                terraform plan -out='./terraform/plan.tfplan' -input=false
                terraform apply -auto-approve './terraform/plan.tfplan'
              displayName: 'Run Terraform Init, Plan and Apply'
     